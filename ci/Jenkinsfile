pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                sh 'pip install -r requirements.txt'
                }
            }
        stage('Test and Coverage') {
            steps {
                script {
                    sh 'pip3 install coverage'
                    sh 'coverage run -m unittest discover'

                    def files = findFiles(glob: '**/test-*.py')
                    for (file in files) {
                        sh "coverage run --omit*/site-packages/*,*/dist-packages/* ${file}.path"

                    sh 'coverage report'
                    }
                    
                }

            }
            post {
                always {
                    junit '**/test-results/*.xml'
                }
            }
        }

        stage('Python Lint') {
            steps {
                sh 'apt-get install -y pylint'
                sh 'pip3 install pylint-fail-under'
                sh 'sh pylint-fail-under --fail_under 5.0 *.py'
            }
        }

        stage('Zip Artifacts) {

        }
    }
}
